{
  "resources": [
    {
      "type": "pubsub.v1.topic",
      "name": "pipeline01-job-topic",
      "properties": {
        "topic": "pipeline01-job-topic"
      }
    },
    {
      "type": "pubsub.v1.subscription",
      "name": "pipeline01-job-subscription",
      "properties": {
        "subscription": "pipeline01-job-subscription",
        "topic": "$(ref.pipeline01-job-topic.name)",
        "ackDeadlineSeconds": 600
      }
    },
    {
      "type": "pubsub.v1.topic",
      "name": "pipeline01-progress-topic",
      "properties": {
        "topic": "pipeline01-progress-topic"
      }
    },
    {
      "type": "pubsub.v1.subscription",
      "name": "pipeline01-progress-subscription",
      "properties": {
        "subscription": "pipeline01-progress-subscription",
        "topic": "$(ref.pipeline01-progress-topic.name)",
        "ackDeadlineSeconds": 30
      }
    },
    {
      "name": "pipeline01-it",
      "type": "compute.v1.instanceTemplate",
      "properties": {
        "zone": "us-central1-f",
        "properties": {
          "machineType": "f1-micro",
          "networkInterfaces": [
            {
              "network": "https://www.googleapis.com/compute/v1/projects/dummy-proj-999/global/networks/default",
              "accessConfigs": [
                {
                  "name": "External-IP",
                  "type": "ONE_TO_ONE_NAT"
                }
              ]
            }
          ],
          "disks": [
            {
              "deviceName": "boot",
              "type": "PERSISTENT",
              "boot": true,
              "autoDelete": true,
              "initializeParams": {
                "sourceImage": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts"
              }
            }
          ],
          "guestAccelerators":
          [
            {
              "acceleratorCount": 2,
              "acceleratorType": "nvidia-tesla-p100"
            }
          ],
	        "scheduling": {
            "onHostMaintenance": "TERMINATE",
						"preemptible": false
					},
          "serviceAccounts": [
            {
              "scopes": [
                "https://www.googleapis.com/auth/devstorage.full_control",
                "https://www.googleapis.com/auth/pubsub",
                "https://www.googleapis.com/auth/logging.write",
                "https://www.googleapis.com/auth/monitoring.write",
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          ],
          "metadata": {
            "items": [
              {
                "key": "startup-script",
                "value": "\nfunction with_backoff {\n  local max_attempts=${MAX_ATTEMPTS-8}\n  local interval=${INITIAL_INTERVAL-1}\n  local attempt=0\n  local exitCode=0\n\n  while (( $attempt \u003c $max_attempts ))\n  do\n    set +e\n    \"$@\"\n    exitCode=$?\n    set -e\n\n    if [[ $exitCode == 0 ]]\n    then\n      break\n    fi\n\n    echo \"Failure! Retrying in $interval..\" 1\u003e\u00262\n    sleep $interval\n    attempt=$(( attempt + 1 ))\n    interval=$(( interval * 2 ))\n  done\n\n  if [[ $exitCode != 0 ]]\n  then\n    echo \"You've failed me for the last time! ($@)\" 1\u003e\u00262\n  fi\n\n  return $exitCode\n}\n\n\nif ! dpkg-query -W cuda; then\n   apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub\n   curl -O http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_10.1.168-1_amd64.deb\n   dpkg -i ./cuda-repo-ubuntu1604_10.1.168-1_amd64.deb\n   apt-get update\n   apt-get -y install cuda\nfi\nnvidia-smi\n\n\napt-get update\napt-get -y install \\\n     apt-transport-https \\\n     ca-certificates \\\n     curl \\\n     software-properties-common\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\napt-key fingerprint 0EBFCD88\nadd-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\napt-get update\napt-get -y install docker-ce\ndocker run hello-world\n\n\ndocker volume ls -q -f driver=nvidia-docker | xargs -r -I{} -n1 docker ps -q -a -f volume={} | xargs -r docker rm -f\napt-get purge -y nvidia-docker\ncurl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -\ndistribution=$(. /etc/os-release;echo $ID$VERSION_ID)\ncurl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list\napt-get update\n\napt-get install -y nvidia-docker2\npkill -SIGHUP dockerd\n\ndocker run --runtime=nvidia --rm nvidia/cuda:10.1-base nvidia-smi\n\nwith_backoff nvidia-docker pull groovenauts/batch_type_iot_example:0.3.1\nfor i in {1..2}; do\n  nvidia-docker run -d \\\n    -e PROJECT=dummy-proj-999 \\\n    -e DOCKER_HOSTNAME=$(hostname) \\\n    -e PIPELINE=pipeline01 \\\n    -e ZONE=us-central1-f \\\n    -e BLOCKS_BATCH_PUBSUB_SUBSCRIPTION=$(ref.pipeline01-job-subscription.name) \\\n    -e BLOCKS_BATCH_PROGRESS_TOPIC=$(ref.pipeline01-progress-topic.name) \\\n    groovenauts/batch_type_iot_example:0.3.1 \\\n    bundle exec magellan-gcs-proxy echo %{download_files.0} %{downloads_dir} %{uploads_dir}\ndone"
              }
            ]
          }
        }
      }
    },
    {
      "name": "pipeline01-igm",
      "type": "compute.v1.instanceGroupManagers",
      "properties": {
        "baseInstanceName": "pipeline01-instance",
        "instanceTemplate": "$(ref.pipeline01-it.selfLink)",
        "targetSize": 2,
        "zone": "us-central1-f"
      }
    }
  ]
}
